// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServiceMgr.proto

#include "ServiceMgr.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr RetBattleErrorCodeCmd::RetBattleErrorCodeCmd(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0)
  , tag_(0)
  , cmd_(1000)
  , param_(1)
{}
struct RetBattleErrorCodeCmdDefaultTypeInternal {
  constexpr RetBattleErrorCodeCmdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RetBattleErrorCodeCmdDefaultTypeInternal() {}
  union {
    RetBattleErrorCodeCmd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RetBattleErrorCodeCmdDefaultTypeInternal _RetBattleErrorCodeCmd_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ServiceMgr_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ServiceMgr_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ServiceMgr_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ServiceMgr_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::RetBattleErrorCodeCmd, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::RetBattleErrorCodeCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RetBattleErrorCodeCmd, cmd_),
  PROTOBUF_FIELD_OFFSET(::RetBattleErrorCodeCmd, param_),
  PROTOBUF_FIELD_OFFSET(::RetBattleErrorCodeCmd, code_),
  PROTOBUF_FIELD_OFFSET(::RetBattleErrorCodeCmd, tag_),
  2,
  3,
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::RetBattleErrorCodeCmd)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_RetBattleErrorCodeCmd_default_instance_),
};

const char descriptor_table_protodef_ServiceMgr_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020ServiceMgr.proto\"\177\n\025RetBattleErrorCode"
  "Cmd\022\021\n\003cmd\030\001 \001(\005:\0041000\0228\n\005param\030\002 \001(\0162\016."
  "BattleCmdType:\031BATTLE_RET_ERROR_CODE_CMD"
  "\022\014\n\004code\030\003 \002(\005\022\013\n\003tag\030\004 \002(\005*.\n\rBattleCmd"
  "Type\022\035\n\031BATTLE_RET_ERROR_CODE_CMD\020\001"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ServiceMgr_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ServiceMgr_2eproto = {
  false, false, 195, descriptor_table_protodef_ServiceMgr_2eproto, "ServiceMgr.proto", 
  &descriptor_table_ServiceMgr_2eproto_once, nullptr, 0, 1,
  schemas, file_default_instances, TableStruct_ServiceMgr_2eproto::offsets,
  file_level_metadata_ServiceMgr_2eproto, file_level_enum_descriptors_ServiceMgr_2eproto, file_level_service_descriptors_ServiceMgr_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ServiceMgr_2eproto_getter() {
  return &descriptor_table_ServiceMgr_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ServiceMgr_2eproto(&descriptor_table_ServiceMgr_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BattleCmdType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ServiceMgr_2eproto);
  return file_level_enum_descriptors_ServiceMgr_2eproto[0];
}
bool BattleCmdType_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class RetBattleErrorCodeCmd::_Internal {
 public:
  using HasBits = decltype(std::declval<RetBattleErrorCodeCmd>()._has_bits_);
  static void set_has_cmd(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_param(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_code(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

RetBattleErrorCodeCmd::RetBattleErrorCodeCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RetBattleErrorCodeCmd)
}
RetBattleErrorCodeCmd::RetBattleErrorCodeCmd(const RetBattleErrorCodeCmd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&code_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:RetBattleErrorCodeCmd)
}

void RetBattleErrorCodeCmd::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&code_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&code_)) + sizeof(tag_));
cmd_ = 1000;
param_ = 1;
}

RetBattleErrorCodeCmd::~RetBattleErrorCodeCmd() {
  // @@protoc_insertion_point(destructor:RetBattleErrorCodeCmd)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RetBattleErrorCodeCmd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RetBattleErrorCodeCmd::ArenaDtor(void* object) {
  RetBattleErrorCodeCmd* _this = reinterpret_cast< RetBattleErrorCodeCmd* >(object);
  (void)_this;
}
void RetBattleErrorCodeCmd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RetBattleErrorCodeCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RetBattleErrorCodeCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:RetBattleErrorCodeCmd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&code_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tag_) -
        reinterpret_cast<char*>(&code_)) + sizeof(tag_));
    cmd_ = 1000;
    param_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RetBattleErrorCodeCmd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 cmd = 1 [default = 1000];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_cmd(&has_bits);
          cmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .BattleCmdType param = 2 [default = BATTLE_RET_ERROR_CODE_CMD];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::BattleCmdType_IsValid(val))) {
            _internal_set_param(static_cast<::BattleCmdType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // required int32 code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_code(&has_bits);
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 tag = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_tag(&has_bits);
          tag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RetBattleErrorCodeCmd::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RetBattleErrorCodeCmd)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cmd = 1 [default = 1000];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_cmd(), target);
  }

  // optional .BattleCmdType param = 2 [default = BATTLE_RET_ERROR_CODE_CMD];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_param(), target);
  }

  // required int32 code = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_code(), target);
  }

  // required int32 tag = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_tag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RetBattleErrorCodeCmd)
  return target;
}

size_t RetBattleErrorCodeCmd::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RetBattleErrorCodeCmd)
  size_t total_size = 0;

  if (_internal_has_code()) {
    // required int32 code = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  if (_internal_has_tag()) {
    // required int32 tag = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tag());
  }

  return total_size;
}
size_t RetBattleErrorCodeCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RetBattleErrorCodeCmd)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 code = 3;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());

    // required int32 tag = 4;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000cu) {
    // optional int32 cmd = 1 [default = 1000];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_cmd());
    }

    // optional .BattleCmdType param = 2 [default = BATTLE_RET_ERROR_CODE_CMD];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_param());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RetBattleErrorCodeCmd::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RetBattleErrorCodeCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const RetBattleErrorCodeCmd* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RetBattleErrorCodeCmd>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RetBattleErrorCodeCmd)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RetBattleErrorCodeCmd)
    MergeFrom(*source);
  }
}

void RetBattleErrorCodeCmd::MergeFrom(const RetBattleErrorCodeCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RetBattleErrorCodeCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      code_ = from.code_;
    }
    if (cached_has_bits & 0x00000002u) {
      tag_ = from.tag_;
    }
    if (cached_has_bits & 0x00000004u) {
      cmd_ = from.cmd_;
    }
    if (cached_has_bits & 0x00000008u) {
      param_ = from.param_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RetBattleErrorCodeCmd::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RetBattleErrorCodeCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RetBattleErrorCodeCmd::CopyFrom(const RetBattleErrorCodeCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RetBattleErrorCodeCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RetBattleErrorCodeCmd::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void RetBattleErrorCodeCmd::InternalSwap(RetBattleErrorCodeCmd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RetBattleErrorCodeCmd, tag_)
      + sizeof(RetBattleErrorCodeCmd::tag_)
      - PROTOBUF_FIELD_OFFSET(RetBattleErrorCodeCmd, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
  swap(cmd_, other->cmd_);
  swap(param_, other->param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RetBattleErrorCodeCmd::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ServiceMgr_2eproto_getter, &descriptor_table_ServiceMgr_2eproto_once,
      file_level_metadata_ServiceMgr_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::RetBattleErrorCodeCmd* Arena::CreateMaybeMessage< ::RetBattleErrorCodeCmd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RetBattleErrorCodeCmd >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
