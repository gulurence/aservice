// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServiceMgr.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ServiceMgr_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ServiceMgr_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ServiceMgr_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ServiceMgr_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ServiceMgr_2eproto;
class RetBattleErrorCodeCmd;
struct RetBattleErrorCodeCmdDefaultTypeInternal;
extern RetBattleErrorCodeCmdDefaultTypeInternal _RetBattleErrorCodeCmd_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::RetBattleErrorCodeCmd* Arena::CreateMaybeMessage<::RetBattleErrorCodeCmd>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum BattleCmdType : int {
  BATTLE_RET_ERROR_CODE_CMD = 1
};
bool BattleCmdType_IsValid(int value);
constexpr BattleCmdType BattleCmdType_MIN = BATTLE_RET_ERROR_CODE_CMD;
constexpr BattleCmdType BattleCmdType_MAX = BATTLE_RET_ERROR_CODE_CMD;
constexpr int BattleCmdType_ARRAYSIZE = BattleCmdType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BattleCmdType_descriptor();
template<typename T>
inline const std::string& BattleCmdType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, BattleCmdType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function BattleCmdType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    BattleCmdType_descriptor(), enum_t_value);
}
inline bool BattleCmdType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, BattleCmdType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<BattleCmdType>(
    BattleCmdType_descriptor(), name, value);
}
// ===================================================================

class RetBattleErrorCodeCmd final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RetBattleErrorCodeCmd) */ {
 public:
  inline RetBattleErrorCodeCmd() : RetBattleErrorCodeCmd(nullptr) {}
  ~RetBattleErrorCodeCmd() override;
  explicit constexpr RetBattleErrorCodeCmd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RetBattleErrorCodeCmd(const RetBattleErrorCodeCmd& from);
  RetBattleErrorCodeCmd(RetBattleErrorCodeCmd&& from) noexcept
    : RetBattleErrorCodeCmd() {
    *this = ::std::move(from);
  }

  inline RetBattleErrorCodeCmd& operator=(const RetBattleErrorCodeCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline RetBattleErrorCodeCmd& operator=(RetBattleErrorCodeCmd&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RetBattleErrorCodeCmd& default_instance() {
    return *internal_default_instance();
  }
  static inline const RetBattleErrorCodeCmd* internal_default_instance() {
    return reinterpret_cast<const RetBattleErrorCodeCmd*>(
               &_RetBattleErrorCodeCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(RetBattleErrorCodeCmd& a, RetBattleErrorCodeCmd& b) {
    a.Swap(&b);
  }
  inline void Swap(RetBattleErrorCodeCmd* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RetBattleErrorCodeCmd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RetBattleErrorCodeCmd* New() const final {
    return new RetBattleErrorCodeCmd();
  }

  RetBattleErrorCodeCmd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RetBattleErrorCodeCmd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RetBattleErrorCodeCmd& from);
  void MergeFrom(const RetBattleErrorCodeCmd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RetBattleErrorCodeCmd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RetBattleErrorCodeCmd";
  }
  protected:
  explicit RetBattleErrorCodeCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 3,
    kTagFieldNumber = 4,
    kCmdFieldNumber = 1,
    kParamFieldNumber = 2,
  };
  // required int32 code = 3;
  bool has_code() const;
  private:
  bool _internal_has_code() const;
  public:
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 tag = 4;
  bool has_tag() const;
  private:
  bool _internal_has_tag() const;
  public:
  void clear_tag();
  ::PROTOBUF_NAMESPACE_ID::int32 tag() const;
  void set_tag(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tag() const;
  void _internal_set_tag(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 cmd = 1 [default = 1000];
  bool has_cmd() const;
  private:
  bool _internal_has_cmd() const;
  public:
  void clear_cmd();
  ::PROTOBUF_NAMESPACE_ID::int32 cmd() const;
  void set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cmd() const;
  void _internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional .BattleCmdType param = 2 [default = BATTLE_RET_ERROR_CODE_CMD];
  bool has_param() const;
  private:
  bool _internal_has_param() const;
  public:
  void clear_param();
  ::BattleCmdType param() const;
  void set_param(::BattleCmdType value);
  private:
  ::BattleCmdType _internal_param() const;
  void _internal_set_param(::BattleCmdType value);
  public:

  // @@protoc_insertion_point(class_scope:RetBattleErrorCodeCmd)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  ::PROTOBUF_NAMESPACE_ID::int32 tag_;
  ::PROTOBUF_NAMESPACE_ID::int32 cmd_;
  int param_;
  friend struct ::TableStruct_ServiceMgr_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RetBattleErrorCodeCmd

// optional int32 cmd = 1 [default = 1000];
inline bool RetBattleErrorCodeCmd::_internal_has_cmd() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool RetBattleErrorCodeCmd::has_cmd() const {
  return _internal_has_cmd();
}
inline void RetBattleErrorCodeCmd::clear_cmd() {
  cmd_ = 1000;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RetBattleErrorCodeCmd::_internal_cmd() const {
  return cmd_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RetBattleErrorCodeCmd::cmd() const {
  // @@protoc_insertion_point(field_get:RetBattleErrorCodeCmd.cmd)
  return _internal_cmd();
}
inline void RetBattleErrorCodeCmd::_internal_set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  cmd_ = value;
}
inline void RetBattleErrorCodeCmd::set_cmd(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:RetBattleErrorCodeCmd.cmd)
}

// optional .BattleCmdType param = 2 [default = BATTLE_RET_ERROR_CODE_CMD];
inline bool RetBattleErrorCodeCmd::_internal_has_param() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool RetBattleErrorCodeCmd::has_param() const {
  return _internal_has_param();
}
inline void RetBattleErrorCodeCmd::clear_param() {
  param_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::BattleCmdType RetBattleErrorCodeCmd::_internal_param() const {
  return static_cast< ::BattleCmdType >(param_);
}
inline ::BattleCmdType RetBattleErrorCodeCmd::param() const {
  // @@protoc_insertion_point(field_get:RetBattleErrorCodeCmd.param)
  return _internal_param();
}
inline void RetBattleErrorCodeCmd::_internal_set_param(::BattleCmdType value) {
  assert(::BattleCmdType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  param_ = value;
}
inline void RetBattleErrorCodeCmd::set_param(::BattleCmdType value) {
  _internal_set_param(value);
  // @@protoc_insertion_point(field_set:RetBattleErrorCodeCmd.param)
}

// required int32 code = 3;
inline bool RetBattleErrorCodeCmd::_internal_has_code() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RetBattleErrorCodeCmd::has_code() const {
  return _internal_has_code();
}
inline void RetBattleErrorCodeCmd::clear_code() {
  code_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RetBattleErrorCodeCmd::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RetBattleErrorCodeCmd::code() const {
  // @@protoc_insertion_point(field_get:RetBattleErrorCodeCmd.code)
  return _internal_code();
}
inline void RetBattleErrorCodeCmd::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  code_ = value;
}
inline void RetBattleErrorCodeCmd::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:RetBattleErrorCodeCmd.code)
}

// required int32 tag = 4;
inline bool RetBattleErrorCodeCmd::_internal_has_tag() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool RetBattleErrorCodeCmd::has_tag() const {
  return _internal_has_tag();
}
inline void RetBattleErrorCodeCmd::clear_tag() {
  tag_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RetBattleErrorCodeCmd::_internal_tag() const {
  return tag_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RetBattleErrorCodeCmd::tag() const {
  // @@protoc_insertion_point(field_get:RetBattleErrorCodeCmd.tag)
  return _internal_tag();
}
inline void RetBattleErrorCodeCmd::_internal_set_tag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  tag_ = value;
}
inline void RetBattleErrorCodeCmd::set_tag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tag(value);
  // @@protoc_insertion_point(field_set:RetBattleErrorCodeCmd.tag)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::BattleCmdType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::BattleCmdType>() {
  return ::BattleCmdType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ServiceMgr_2eproto
